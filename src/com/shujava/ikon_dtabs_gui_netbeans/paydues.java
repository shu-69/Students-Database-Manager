/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.shujava.ikon_dtabs_gui_netbeans;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Objects;
import javax.swing.JOptionPane;

/**
 *
 * @author shubh
 */
public class paydues extends javax.swing.JFrame {

    /**
     * Creates new form paydues
     */
    static int rollmatch;
    static int matchat = 0;
    static int feeint;
    static int paidint;
    static int duesint;
    static String prevfee;
    static String prevpaid;
    static String prevdues;

    public paydues() {
        initComponents();
        reset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        nextdues = new javax.swing.JTextField();
        selbut = new com.k33ptoo.components.KButton();
        wrnlbl = new javax.swing.JLabel();
        dueslbl = new javax.swing.JLabel();
        titlelbl = new javax.swing.JLabel();
        coursesel = new javax.swing.JComboBox<>();
        kButton3 = new com.k33ptoo.components.KButton();
        dlbl = new javax.swing.JLabel();
        flbl = new javax.swing.JLabel();
        plbl = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        amountlbl = new javax.swing.JLabel();
        rolllinp = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        closebutt = new com.k33ptoo.components.KButton();
        paybutt1 = new com.k33ptoo.components.KButton();
        paidlbl = new javax.swing.JLabel();
        payerrlbl = new javax.swing.JLabel();

        setTitle("Pay dues");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(2, 45, 145));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nextdues.setBackground(new Color(0,0,0,0));
        nextdues.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        nextdues.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        nextdues.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nextdues.setOpaque(false);
        nextdues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextduesActionPerformed(evt);
            }
        });
        jPanel2.add(nextdues, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, 120, -1));

        selbut.setBorder(null);
        selbut.setText("Select");
        selbut.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        selbut.setkFillButton(false);
        selbut.setkForeGround(new java.awt.Color(102, 102, 102));
        selbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selbutActionPerformed(evt);
            }
        });
        jPanel2.add(selbut, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 100, 30));

        wrnlbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        wrnlbl.setForeground(new java.awt.Color(204, 0, 0));
        wrnlbl.setText("Reg No. did't match to our database");
        jPanel2.add(wrnlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 20, 230, 30));

        dueslbl.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        dueslbl.setText("Next Dues        :");
        jPanel2.add(dueslbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 330, -1, -1));

        titlelbl.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jPanel2.add(titlelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 340, 30));

        coursesel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Course" }));
        jPanel2.add(coursesel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 130, 30));

        kButton3.setBorder(null);
        kButton3.setText("Get Fee details");
        kButton3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        kButton3.setkFillButton(false);
        kButton3.setkForeGround(new java.awt.Color(102, 102, 102));
        kButton3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                kButton3AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        kButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(kButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 110, 30));

        dlbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel2.add(dlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 270, 40));

        flbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel2.add(flbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 270, 40));

        plbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel2.add(plbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 270, 40));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel24.setText("Enter Registration No. :");
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        amountlbl.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        amountlbl.setText("Amount to Pay : ");
        jPanel2.add(amountlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, -1, -1));

        rolllinp.setBackground(new Color(0,0,0,0));
        rolllinp.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        rolllinp.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        rolllinp.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rolllinp.setOpaque(false);
        rolllinp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolllinpActionPerformed(evt);
            }
        });
        rolllinp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rolllinpKeyPressed(evt);
            }
        });
        jPanel2.add(rolllinp, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 260, -1));

        amount.setBackground(new Color(0,0,0,0));
        amount.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        amount.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        amount.setMargin(new java.awt.Insets(0, 0, 0, 0));
        amount.setOpaque(false);
        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });
        amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountKeyPressed(evt);
            }
        });
        jPanel2.add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, 120, -1));

        closebutt.setBorder(null);
        closebutt.setText("Close");
        closebutt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        closebutt.setkFillButton(false);
        closebutt.setkForeGround(new java.awt.Color(102, 102, 102));
        closebutt.setkStartColor(new java.awt.Color(255, 102, 102));
        closebutt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebuttActionPerformed(evt);
            }
        });
        jPanel2.add(closebutt, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 330, 100, 30));

        paybutt1.setBorder(null);
        paybutt1.setText("Pay");
        paybutt1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        paybutt1.setkFillButton(false);
        paybutt1.setkForeGround(new java.awt.Color(102, 102, 102));
        paybutt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paybutt1ActionPerformed(evt);
            }
        });
        jPanel2.add(paybutt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 290, 100, 30));

        paidlbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        paidlbl.setForeground(new java.awt.Color(0, 153, 0));
        jPanel2.add(paidlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 390, 330, 30));

        payerrlbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        payerrlbl.setForeground(new java.awt.Color(204, 0, 0));
        jPanel2.add(payerrlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, 330, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 900, 500));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void reset() {
        wrnlbl.setVisible(false);
        dlbl.setText("");
        titlelbl.setText("");
        coursesel.setVisible(false);
        selbut.setVisible(false);
        flbl.setText("");
        plbl.setText("");
        dlbl.setText("");
        amountlbl.setVisible(false);
        dueslbl.setVisible(false);
        paybutt1.setVisible(false);
        closebutt.setVisible(false);
        amount.setVisible(false);
        nextdues.setVisible(false);
        coursesel.removeAllItems();
        prevfee = "";
        prevpaid = "";
        prevdues = "";
        matchat = 0;
        payerrlbl.setText("");
        paidlbl.setText("");
        coursesel.addItem("Select Course");
    }

    private void showelements() {
        //titlelbl.setVisible(true);
        coursesel.setVisible(true);
        selbut.setVisible(true);
        //flbl.setVisible(true);
        //plbl.setVisible(true);
        //dlbl.setVisible(true);
    }

    private void loadcourse(int i) {
        showelements();
        String tempcourse = "";
        for (int j = 3; j < students.course[i].length(); j++) {
            if (students.course[i].charAt(j) == ' ' || students.course[i].charAt(j) == '|') {
                if (tempcourse.length() > 0) {
                    coursesel.addItem(tempcourse);
                    tempcourse = "";
                }
            } else {
                tempcourse += students.course[i].charAt(j);
            }
        }
    }

    private void loadfeedet(int i) {

        matchat = 0;
        if (!"Select Course ".equals(String.valueOf(coursesel.getSelectedItem()))) {
            String course = String.valueOf(coursesel.getSelectedItem());
            String tempcourse = "";

            for (int j = 0; j < students.course[i].length(); j++) {
                if (students.course[i].charAt(j) != ' ' || students.course[i].charAt(j) != '|') {
                    tempcourse += students.course[i].charAt(j);
                }
                if (students.course[i].charAt(j) == ' ' || students.course[i].charAt(j) == '|') {
                    tempcourse = "";
                }
                if (Objects.equals(course, tempcourse)) {
                    matchat = (matchat - tempcourse.length()) + 1;
                    break;
                }
                matchat++;
            }

            // Get fee    
            prevfee = "";
            for (int j = matchat; j < students.fee[i].length(); j++) {
                if (students.fee[i].charAt(j) == ' ' || students.fee[i].charAt(j) == '|') {
                    break;
                }
                if (students.fee[i].charAt(j) != ' ' || students.fee[i].charAt(j) != '|') {
                    prevfee += students.fee[i].charAt(j);
                }
            }
            
            feeint = Integer.parseInt(prevfee);

            // Get paid
            prevpaid = "";
            for (int j = matchat; j < students.paid[i].length(); j++) {
                if (students.paid[i].charAt(j) == ' ' || students.paid[i].charAt(j) == '|') {
                    break;
                }
                if (students.paid[i].charAt(j) != ' ' || students.paid[i].charAt(j) != '|') {
                    prevpaid += students.paid[i].charAt(j);
                }
            }

            paidint = Integer.parseInt(prevpaid);

            // Get dues
            prevdues = "";
            for (int j = matchat; j < students.dues[i].length(); j++) {
                if (students.dues[i].charAt(j) == ' ' || students.dues[i].charAt(j) == '|') {
                    break;
                }
                if (students.dues[i].charAt(j) != ' ' || students.dues[i].charAt(j) != '|') {
                    prevdues += students.dues[i].charAt(j);
                }
            }

            duesint = Integer.parseInt(prevdues);

            // Print in label
            flbl.setText("Course Fee     :     " + prevfee);
            plbl.setText("Fee Paid         :     " + prevpaid);
            dlbl.setText("Fee Dues        :     " + prevdues);

        }

    }
    private void nextduesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextduesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nextduesActionPerformed

    private void kButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton3ActionPerformed

        reset();
        String roll = rolllinp.getText();
        int i;
        for (i = 0; i < students.a; i++) {
            if (Objects.equals(roll, students.roll[i])) {
                titlelbl.setText(students.name[i] + "'s fee details : ");
                rollmatch = i;
                loadcourse(i);
                break;
            }
        }

        if (i == students.a) {
            wrnlbl.setVisible(true);
        }
    }//GEN-LAST:event_kButton3ActionPerformed

    private void kButton3AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_kButton3AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_kButton3AncestorAdded

    private void rolllinpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolllinpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rolllinpActionPerformed

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountActionPerformed

    private void selbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selbutActionPerformed
        // select button

        amountlbl.setVisible(true);
        paybutt1.setVisible(true);
        closebutt.setVisible(true);
        amount.setVisible(true);
        loadfeedet(rollmatch);
    }//GEN-LAST:event_selbutActionPerformed

    private void paybutt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paybutt1ActionPerformed

        paidlbl.setText("");
        payerrlbl.setText("");
        String temppay = amount.getText();
        try {
            int pay = Integer.parseInt(temppay);
            int finpaid = paidint + pay;
            int findues = feeint - finpaid;
            nextdues.setText(String.valueOf(findues));
            String temppaid = "";
            // update paid 
            for (int s = 0; s < students.paid[rollmatch].length(); s++) {
                temppaid = temppaid + students.paid[rollmatch].charAt(s);
                if (s == matchat - 1) {
                    int h = 0;
                    while (h != String.valueOf(finpaid).length()) {
                        temppaid = temppaid + String.valueOf(finpaid).charAt(h);
                        s++;
                        h++;
                    }
                }
            }
            students.paid[rollmatch] = temppaid;
            // update dues
            String duesmatch = String.valueOf(findues);
            String tempdues = "";
            if (prevdues.length() > duesmatch.length()) {
                int diff = prevdues.length() - duesmatch.length();
                for (int s = 0; s < students.dues[rollmatch].length(); s++) {
                    if (s == matchat + duesmatch.length()) {
                        for (int h = 0; h < diff; h++) {
                            tempdues = tempdues + " ";
                            s++;
                        }
                        tempdues = tempdues + " ";
                    } else {
                        tempdues = tempdues + students.dues[rollmatch].charAt(s);
                        if (s == matchat - 1) {
                            int h = 0;
                            while (h != duesmatch.length()) {
                                tempdues = tempdues + duesmatch.charAt(h);
                                s++;
                                h++;
                            }
                        }
                    }
                }
                students.dues[rollmatch] = tempdues;
            }
            if (prevdues.length() == duesmatch.length()) {
                for (int s = 0; s < students.dues[rollmatch].length(); s++) {
                    tempdues = tempdues + students.dues[rollmatch].charAt(s);
                    if (s == matchat - 1) {
                        int h = 0;
                        while (h != duesmatch.length()) {
                            tempdues = tempdues + duesmatch.charAt(h);
                            s++;
                            h++;
                        }
                    }
                }
                students.dues[rollmatch] = tempdues;

                students.saveData();

                dueslbl.setVisible(true);
                nextdues.setVisible(true);
                paidlbl.setText("Fee updated");
            }

        } catch (Exception e) {
            payerrlbl.setText("Try again ..!");
        }

    }//GEN-LAST:event_paybutt1ActionPerformed

    private void closebuttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebuttActionPerformed
        paydues.this.hide();
    }//GEN-LAST:event_closebuttActionPerformed

    private void rolllinpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rolllinpKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            paydues.this.hide();
        }
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            reset();
            String roll = rolllinp.getText();
            int i;
            for (i = 0; i < students.a; i++) {
                if (Objects.equals(roll, students.roll[i])) {
                    titlelbl.setText(students.name[i] + "'s fee details : ");
                    rollmatch = i;
                    loadcourse(i);
                    break;
                }
            }

            if (i == students.a) {
                wrnlbl.setVisible(true);
            }
        }
    }//GEN-LAST:event_rolllinpKeyPressed

    private void amountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            paidlbl.setText("");
            payerrlbl.setText("");
            String temppay = amount.getText();
            try {
                int pay = Integer.parseInt(temppay);
                int finpaid = paidint + pay;
                int findues = feeint - finpaid;
                nextdues.setText(String.valueOf(findues));
                String temppaid = "";
                // update paid 
                for (int s = 0; s < students.paid[rollmatch].length(); s++) {
                    temppaid = temppaid + students.paid[rollmatch].charAt(s);
                    if (s == matchat - 1) {
                        int h = 0;
                        while (h != String.valueOf(finpaid).length()) {
                            temppaid = temppaid + String.valueOf(finpaid).charAt(h);
                            s++;
                            h++;
                        }
                    }
                }
                students.paid[rollmatch] = temppaid;
                // update dues
                String duesmatch = String.valueOf(findues);
                String tempdues = "";
                if (prevdues.length() > duesmatch.length()) {
                    int diff = prevdues.length() - duesmatch.length();
                    for (int s = 0; s < students.dues[rollmatch].length(); s++) {
                        if (s == matchat + duesmatch.length()) {
                            for (int h = 0; h < diff; h++) {
                                tempdues = tempdues + " ";
                                s++;
                            }
                            tempdues = tempdues + " ";
                        } else {
                            tempdues = tempdues + students.dues[rollmatch].charAt(s);
                            if (s == matchat - 1) {
                                int h = 0;
                                while (h != duesmatch.length()) {
                                    tempdues = tempdues + duesmatch.charAt(h);
                                    s++;
                                    h++;
                                }
                            }
                        }
                    }
                    students.dues[rollmatch] = tempdues;
                }
                if (prevdues.length() == duesmatch.length()) {
                    for (int s = 0; s < students.dues[rollmatch].length(); s++) {
                        tempdues = tempdues + students.dues[rollmatch].charAt(s);
                        if (s == matchat - 1) {
                            int h = 0;
                            while (h != duesmatch.length()) {
                                tempdues = tempdues + duesmatch.charAt(h);
                                s++;
                                h++;
                            }
                        }
                    }
                    students.dues[rollmatch] = tempdues;

                    students.saveData();

                    dueslbl.setVisible(true);
                    nextdues.setVisible(true);
                    paidlbl.setText("Fee updated");
                }

            } catch (Exception e) {
                payerrlbl.setText("Try again ..!");
            }
        }
    }//GEN-LAST:event_amountKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(paydues.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(paydues.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(paydues.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(paydues.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new paydues().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField amount;
    private javax.swing.JLabel amountlbl;
    private com.k33ptoo.components.KButton closebutt;
    private javax.swing.JComboBox<String> coursesel;
    private javax.swing.JLabel dlbl;
    private javax.swing.JLabel dueslbl;
    private javax.swing.JLabel flbl;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private com.k33ptoo.components.KButton kButton3;
    public static javax.swing.JTextField nextdues;
    private javax.swing.JLabel paidlbl;
    private com.k33ptoo.components.KButton paybutt1;
    private javax.swing.JLabel payerrlbl;
    private javax.swing.JLabel plbl;
    public static javax.swing.JTextField rolllinp;
    private com.k33ptoo.components.KButton selbut;
    private javax.swing.JLabel titlelbl;
    private javax.swing.JLabel wrnlbl;
    // End of variables declaration//GEN-END:variables
}
